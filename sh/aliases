# ------------------------------------------------------------------------------
# General Aliases and Functions
# ------------------------------------------------------------------------------
alias aliases="vim ~/.sh/aliases"
alias brave="/Applications/Brave\ Browser.app/Contents/MacOS/Brave\ Browser"
alias google-chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
alias grep='grep --color'
alias ifme="curl ifconfig.me && echo \"\" && ifconfig | grep -E \"\d+\.\d+\.\d+\.\d+\""
alias ll="ls -al"
alias ls='ls -GFh'
alias ll='ls -laGFh'
alias nas_mount='mount_smbfs //192.168.1.1/Zach ~/NAS'
alias psme="ps aux | grep $(whoami)"
alias subl="/Applications/Sublime\ Text.app/Contents/MacOS/Sublime\ Text"
alias tf="terraform"
alias weather="curl wttr.in/14086"

# Search the current directory recursively
function csearch() {
    grep --color -ERn $@ .
}


# ------------------------------------------------------------------------------
# Git Aliases
# ------------------------------------------------------------------------------
# Get the current git branch for PS1
function parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/‚å• \1 /'
  # insertions=$(git diff --stat | grep -Eo "\d+ insertions" | grep -Eo "\d+")
  # deletions=$(git diff --stat | grep -Eo "\d+ deletions" | grep -Eo "\d+")
  # echo "${branch} +${insertions}/-${deletions} "
}

# Change to the root of the git repo directory
function gitroot() {
  cd $(git rev-parse --show-toplevel)
}


# ------------------------------------------------------------------------------
# Bookmark Function
# ------------------------------------------------------------------------------
function b() {
    BOOKMARKS_FILE=~/.bookmarks

    if [[ $# -lt 1 ]]; then
      echo "Usage: b <bookmark> -- cd into a bookmarked directory"
      echo "       b edit       -- edit the bookmark config file ${BOOKMARKS_FILE}"
      return
    fi

    # b edit will open ~/.bookmarks
    if [[ $1 == "edit" ]]; then
      /bin/bash -c "vim ${BOOKMARKS_FILE}"
      return
    fi

    BOOKMARK=$1

    # Make sure this is a valid bookmark
    BOOKMARK_CONFIG=$(cat ${BOOKMARKS_FILE} | grep -E  "^${BOOKMARK} ")
    if [[ -z ${BOOKMARK_CONFIG} ]]; then
      echo "Bookmark \"${BOOKMARK}\" not found"
      return
    fi

    # cd into the bookmarked directory
    BOOKMARKED_DIR=$(echo ${BOOKMARK_CONFIG} | awk '{print $2}' | sed "s#\~#$HOME#g")
    cd ${BOOKMARKED_DIR}
}


# ------------------------------------------------------------------------------
# Journal Aliases
# ------------------------------------------------------------------------------
alias journal="vim ~/dev/journal"
alias entry="/usr/local/bin/add_journal_entry.sh Personal"
alias todo="vim ~/dev/journal/TODO.md"


# ------------------------------------------------------------------------------
# Tmux Aliases
# ------------------------------------------------------------------------------
alias killw="tmux kill-window"
alias killp="tmux kill-pane"
alias kills="tmux kill-session"


# ------------------------------------------------------------------------------
# Kubernetes Aliases and Functions
# ------------------------------------------------------------------------------
alias k="kubectl"
alias kubeconfig_update="/usr/local/bin/update_kubeconfig.sh"
alias proxy="/usr/local/bin/kube_proxy.sh"

function roll_pods() {
  # Usage: $ roll_pods <pod> <namespace> [<parallel pods>]
  if [[ $# -lt 3 ]]; then
    PARALLEL=1
  else
    PARALLEL=$3
  fi

  kubectl -n $2 get pods | awk '{print $1}' | grep ^$1 | xargs -P${PARALLEL} -n1 kubectl -n $2 delete pod
}

function suspend_cron() {
  # Usage: suspend_cron <cronjob name> <namespace>
  kubectl patch -n $2 cronjob/$1 -p '{"spec": {"suspend": true}}'
}

function enable_cron() {
  # Usage: enable_cron <cronjob name> <namespace>
  kubectl patch -n $2 cronjob/$1 -p '{"spec": {"suspend": false}}'
}

function trigger_cron() {
  # Usage: trigger_cron <cronjob name> <namespace>
  kubectl create job --from=cronjob/$1 -n $2 $1-manual-$(date +"%s")
}
